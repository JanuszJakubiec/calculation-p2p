<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLPackage</id><coordinates><x>650</x><y>2</y><w>640</w><h>1520</h></coordinates><panel_attributes>message.body
--
bg=green
layer=-5</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>20</x><y>452</y><w>330</w><h>50</h></coordinates><panel_attributes>MessageProcessor
--
+MessageProcessor(Router, StateUpdater, StateInformer)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>370</x><y>412</y><w>200</w><h>120</h></coordinates><panel_attributes>MessageProcessContext
--
+router: Router
+stateUpdater: StateUpdater
+stateInformerr: StateInformer
+register: NodeRegister
+futureProcessor: FutureProcessor
+interrupter: IdleInterrupter</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>300</x><y>822</y><w>270</w><h>70</h></coordinates><panel_attributes>MessageParser
--
+MessageParser()
+parse(message: String): Message
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>445</x><y>1182</y><w>130</w><h>30</h></coordinates><panel_attributes>TaskResult
group=6</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>445</x><y>1042</y><w>140</w><h>90</h></coordinates><panel_attributes>TaskRecord
--
-task: int
-state: TaskState
-owner: int
-result: TaskResult
group=6</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>670</x><y>42</y><w>280</w><h>120</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Body
--
+serializeType(): String = null
+serializeContent(): String = null
+process(sender: int, context: MessageProcessContext) = null
--
strategy DP</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>202</y><w>530</w><h>90</h></coordinates><panel_attributes>GetInit
--
+GetInit()
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;60;40;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>322</y><w>530</w><h>90</h></coordinates><panel_attributes>GiveInit
--
+GiveInit(newId: int, publicNodes: Map&lt;Integer, InetSocketAddress&gt;, privateNodes: List&lt;Integer&gt;)
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>200</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;180;40;180</additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>442</y><w>530</w><h>90</h></coordinates><panel_attributes>Hello
--
+Hello(ip: InetSocketAddress)
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>922</y><w>530</w><h>90</h></coordinates><panel_attributes>Reserve
--
+Reserve(taskId: int)
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>562</y><w>530</w><h>90</h></coordinates><panel_attributes>GetProgress
--
+GetProgress()
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>802</y><w>530</w><h>90</h></coordinates><panel_attributes>HeartBeat
--
+HeartBeat()
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>682</y><w>530</w><h>90</h></coordinates><panel_attributes>GiveProgress
--
+GiveProgress(progress: CalculationProgress)
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>1282</y><w>530</w><h>90</h></coordinates><panel_attributes>GetSynchronization
--
+GetSynchronization(tasks: List&lt;Integer&gt;)
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>1042</y><w>530</w><h>90</h></coordinates><panel_attributes>Confirm
--
+Confirm(taskRecord: TaskRecord)
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>1162</y><w>530</w><h>90</h></coordinates><panel_attributes>Calculated
--
+Calculated(taskId: int, result: TaskResult)
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>730</x><y>1402</y><w>530</w><h>90</h></coordinates><panel_attributes>GiveSynchronization
--
+GiveSynchronization(tasks: List&lt;TaskRecord&gt;)
+serializeType(): String
+serializeContent(): String
+process(sender: int, context: MessageProcessContext)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>320</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;300;40;300</additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>440</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;420;40;420</additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>560</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;540;40;540</additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>680</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;660;40;660</additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>800</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;780;40;780</additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>920</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;900;40;900</additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>1040</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;1020;40;1020</additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>1160</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;1140;40;1140</additional_attributes></element><element><id>Relation</id><coordinates><x>691</x><y>152</y><w>60</w><h>1280</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;1260;40;1260</additional_attributes></element><element><id>Relation</id><coordinates><x>500</x><y>1116</y><w>30</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>15;16;15;66</additional_attributes></element><element><id>UMLClass</id><coordinates><x>300</x><y>642</y><w>270</w><h>120</h></coordinates><panel_attributes>Message
--
+Message(sender: int, receiver: int, body: Body)
+clone(receiverId: int): Message
-.
+serialize(): String
+process(context: MessageProcessContext)
--
serialize() is a template method</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>21</x><y>582</y><w>100</w><h>30</h></coordinates><panel_attributes>Thread
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>61</x><y>492</y><w>30</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>430</x><y>747</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;75;10;15</additional_attributes></element><element><id>Relation</id><coordinates><x>561</x><y>42</y><w>130</w><h>400</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;380;70;380;70;10;110;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>0</x><y>0</y><w>600</w><h>550</h></coordinates><panel_attributes>message.process
--
bg=orange
layer=-5</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>561</x><y>152</y><w>140</w><h>520</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;500;120;500;120;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>270</x><y>585</y><w>330</w><h>340</h></coordinates><panel_attributes>message
--
bg=red
layer=-5</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>26</x><y>639</y><w>160</w><h>110</h></coordinates><panel_attributes>network.routing
--
bg=blue
group=5</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>56</x><y>688</y><w>100</w><h>30</h></coordinates><panel_attributes>Router
group=5</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>126</x><y>487</y><w>40</w><h>220</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>14;15;10;200</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>431</x><y>1007</y><w>170</w><h>230</h></coordinates><panel_attributes>state.task
--
bg=yellow
layer=-5
group=6</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>272</x><y>48</y><w>300</w><h>140</h></coordinates><panel_attributes>NodeRegister
--
+NodeRegister(validityTime: int)
+getOutdatedNodes(): List&lt;Integer&gt;
-.
+addPublicNode(id: int, ip: InetSocketAddress)
+addPrivateNode(id: int)
+updateNode(id: int)
+getPublicNodes(): Map&lt;Integer, InetSocketAddress&gt;
+getPrivateNodes(): List&lt;Integer&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>292</x><y>308</y><w>280</w><h>80</h></coordinates><panel_attributes>HeartBeatEmiter
--
+HeartBeatEmiter(timePeroid: int, router: Router)
+beat()
+nextBeatTime(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>22</x><y>48</y><w>230</w><h>60</h></coordinates><panel_attributes>StateObserver
--
+StateObserver(informer: StateInformer)
+getMessages(): List&lt;Message&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>252</x><y>208</y><w>320</w><h>80</h></coordinates><panel_attributes>FutureProcessor
--
+FutureProcessor()
+tryProcessAll()
-.
+addFutureProcess(condition: Future, process: Runnable)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>453</x><y>948</y><w>220</w><h>80</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;60;10;10;200;10</additional_attributes></element><element><id>Relation</id><coordinates><x>158</x><y>100</y><w>40</w><h>370</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>12;350;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>158</x><y>140</y><w>140</w><h>330</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>12;310;10;10;114;10</additional_attributes></element><element><id>Relation</id><coordinates><x>158</x><y>210</y><w>120</w><h>260</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>12;240;10;10;94;10</additional_attributes></element><element><id>Relation</id><coordinates><x>158</x><y>310</y><w>160</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=injection</panel_attributes><additional_attributes>12;140;10;10;134;10</additional_attributes></element><element><id>Relation</id><coordinates><x>318</x><y>410</y><w>80</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>12;40;10;10;52;10</additional_attributes></element><element><id>Relation</id><coordinates><x>214</x><y>486</y><w>110</w><h>190</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>86;170;10;170;10;16</additional_attributes></element></diagram>