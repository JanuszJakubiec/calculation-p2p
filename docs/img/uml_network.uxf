<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>150</x><y>372</y><w>130</w><h>30</h></coordinates><panel_attributes>MessageQueueEntry</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>440</x><y>292</y><w>370</w><h>100</h></coordinates><panel_attributes>network.ConnectionManager
--
+ConnectionManager(MessageQueueEntry, IdleInterrupter)
-.
+addStaticConnection(connection: StaticConnection)
+removeStaticConnection(connection: StaticConnection)
-.
-incomingConnectionOrMessage: Selector</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>980</x><y>292</y><w>100</w><h>30</h></coordinates><panel_attributes>Thread</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>450</x><y>42</y><w>350</w><h>100</h></coordinates><panel_attributes>&lt;&lt;abstract&gt;&gt;
network.Connection
--
+send(message: Message): bool = null
+subscribe(selector: Selector, events: int)
-.
~close()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>40</x><y>122</y><w>170</w><h>30</h></coordinates><panel_attributes>Message
group=6</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>150</x><y>502</y><w>360</w><h>220</h></coordinates><panel_attributes>&lt;&lt;abstract&gt;&gt;
Router
--
+Router(ConnectionManager, MessageQueueExit, RoutingTable)
-.
+setId(id: int)
+createInterface(nodeId: int) = null
+createInterface(nodeId: int, ipAddress: InetSocketAddress)
+deleteInterface(nodeId: int)
-..
+send(message: Message)
+getMessages(): List&lt;Message&gt;
--
Responsibilities:
-- based on incomming messages updates RoutingTable</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>20</x><y>372</y><w>120</w><h>30</h></coordinates><panel_attributes>MessageQueueExit</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>312</y><w>110</w><h>30</h></coordinates><panel_attributes>MessageQueue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>265</x><y>372</y><w>190</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>175;10;15;10</additional_attributes></element><element><id>Relation</id><coordinates><x>450</x><y>382</y><w>30</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;120;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>800</x><y>292</y><w>200</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>180;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>590</x><y>502</y><w>300</w><h>220</h></coordinates><panel_attributes>RoutingTable
--
~RoutingTable()
-.
~addInterface(id: int)
~removeInterface(id: int)
~bind(id: int, connection: Connection)
-.
~send(id: int, message: Message)
~trySend(id: int, message: Message): boolean
~resendAll()
--
Responsibilities:
-- binds id -&gt; connection
-- queues outgoing messages when no connection
-- resends queued messages on connection restore</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>494</x><y>502</y><w>110</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>16;10;96;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>630</x><y>172</y><w>280</w><h>80</h></coordinates><panel_attributes>network.StaticConnection
--
+StaticConnection(ipAddress: InetSocketAddress)
+send(message: Message): bool
~reconnect()</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>754</x><y>132</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>350</x><y>172</y><w>260</w><h>60</h></coordinates><panel_attributes>network.DynamicConnection
--
~DynamicConnection(socket: SocketChannel)
+send(message: Message): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>484</x><y>132</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>Relation</id><coordinates><x>750</x><y>242</y><w>50</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes><additional_attributes>10;50;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1</x><y>70</y><w>240</w><h>110</h></coordinates><panel_attributes>message.process
--
bg=orange
layer=-1


group=6</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>332</x><y>0</y><w>600</w><h>420</h></coordinates><panel_attributes>network.connection
--
bg=green
layer=-4</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>42</x><y>450</y><w>890</w><h>510</h></coordinates><panel_attributes>network.routing
--
bg=blue
layer=-4</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>790</x><y>42</y><w>180</w><h>500</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes><additional_attributes>100;470;160;470;160;10;10;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>0</x><y>250</y><w>300</w><h>170</h></coordinates><panel_attributes>network.messagequeue
--
bg=red
layer=-4
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>100</x><y>330</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;42;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>170</x><y>330</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;42;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>140</x><y>140</y><w>50</w><h>190</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes><additional_attributes>10;172;10;12</additional_attributes></element><element><id>Relation</id><coordinates><x>15</x><y>392</y><w>160</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>135;120;10;120;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>480</x><y>222</y><w>50</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>190</x><y>52</y><w>280</w><h>310</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n</panel_attributes><additional_attributes>10;280;80;280;80;10;260;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>70</x><y>762</y><w>390</w><h>150</h></coordinates><panel_attributes>PublicRouter
--
+PublicRouter(ConnectionManager, MessageQueueExit, RoutingTable)
-.
+createInterface(nodeId: int)
+deleteInterface(nodeId: int)
-..
+send(message: Message)
+getMessages(): List&lt;Message&gt;
--
Responsibilities:
-- changes incomming broadcast into many unicasts</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>490</x><y>762</y><w>400</w><h>170</h></coordinates><panel_attributes>PrivateRouter
--
+PrivateRouter(ConnectionManager, MessageQueueExit, RoutingTable)
-.
+createInterface(nodeId: int)
+deleteInterface(nodeId: int)
-..
+send(message: Message)
+getMessages(): List&lt;Message&gt;
--
Responsibilities:
-- makes sure to send broadcast and indirect unicast right now
-- queues if not possible</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>193</x><y>706</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>17;16;17;56</additional_attributes></element><element><id>Relation</id><coordinates><x>483</x><y>706</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>17;16;17;56</additional_attributes></element></diagram>